# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name hhagent.ru www.hhagent.ru;

    # Простой редирект на HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    # Одна запись для IPv4 и одна для IPv6 (без дублирования ssl_protocols и прочего)
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;
    server_name hhagent.ru www.hhagent.ru;

    # SSL-конфигурация от Certbot/Let’s Encrypt
    ssl_certificate     /etc/letsencrypt/live/hhagent.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hhagent.ru/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # OCSP stapling: добавляем резолвер и таймаут
    resolver            1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout    5s;
    ssl_stapling        on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options           "SAMEORIGIN"               always;
    add_header X-Content-Type-Options    "nosniff"                  always;
    add_header X-XSS-Protection          "1; mode=block"            always;
    add_header Referrer-Policy           "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy   "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'" always;

    # Logging
    access_log  /var/log/nginx/hhagent.access.log;
    error_log   /var/log/nginx/hhagent.error.log;

    # Frontend
    location / {
        proxy_pass         http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_buffering    off;
        proxy_request_buffering off;
    }

    # API
    location /api/ {
        proxy_pass           http://127.0.0.1:8001/;
        proxy_set_header     Host              $host;
        proxy_set_header     X-Real-IP         $remote_addr;
        proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header     X-Forwarded-Proto $scheme;
        proxy_read_timeout   300s;
        proxy_connect_timeout 75s;

        # CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin'  '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age'        1728000;
            add_header 'Content-Type'                 'text/plain; charset=utf-8';
            add_header 'Content-Length'               0;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
