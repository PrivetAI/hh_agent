FROM node:18-alpine AS builder

WORKDIR /app

# Copy package.json (and package-lock.json if it exists)
COPY package*.json ./

# Use npm ci if package-lock.json exists, otherwise use npm install
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Copy the rest of the application
COPY . .

# Build the application
RUN npm run build

FROM node:18-alpine AS runner

WORKDIR /app

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy package.json for dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=builder /app/public ./public

# Check if standalone build exists, if not use regular build
RUN mkdir -p ./.next
COPY --from=builder /app/.next/static ./.next/static

# Copy standalone if it exists, otherwise copy the full .next directory
COPY --from=builder /app/.next ./.next

# Set correct permissions
RUN chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Use npm start for regular Next.js, or node server.js for standalone
CMD ["npm", "start"]