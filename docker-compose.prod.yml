version: '3.8'

services:
  postgres-hh:
    image: postgres:15-alpine
    container_name: hhagent_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hhapp}
      POSTGRES_USER: ${POSTGRES_USER:-hhuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: postgres -c shared_buffers=256MB -c effective_cache_size=512MB -c work_mem=4MB -c max_connections=40
    volumes:
      - postgres_hh_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - hh-network

  redis-hh:
    image: redis:7-alpine
    container_name: hhagent_redis
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru --save ""
    ports:
      - "127.0.0.1:6380:6379"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - hh-network

  backend-hh:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: hhagent_backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-hhuser}:${POSTGRES_PASSWORD}@postgres-hh:5432/${POSTGRES_DB:-hhapp}
      REDIS_URL: redis://redis-hh:6379
      GUNICORN_WORKERS: 1
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      postgres-hh:
        condition: service_healthy
      redis-hh:
        condition: service_started
    ports:
      - "127.0.0.1:8001:8000"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - hh-network

  frontend-hh:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: hhagent_frontend
    ports:
      - "127.0.0.1:3001:3000"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - hh-network

  backup-hh:
    build:
      context: ./backend
      dockerfile: backup.Dockerfile
    container_name: hhagent_backup
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-hhuser}:${POSTGRES_PASSWORD}@postgres-hh:5432/${POSTGRES_DB:-hhapp}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
    depends_on:
      postgres-hh:
        condition: service_healthy
    restart: always
    networks:
      - hh-network
    volumes:
      - /tmp/backups:/tmp

volumes:
  postgres_hh_data:

networks:
  hh-network:
    driver: bridge
    name: hhagent_network
